{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sUA6BeA,MAxBf,YAAwD,EAAxCC,GAAyC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC5C,OAAO,yBAAKC,UAAU,SACd,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UACRD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACb,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAC/C,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UCqEDC,G,iNAjDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,4DADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnBM,QAAQC,IAAIP,GACZ,EAAKQ,SAAS,CAAER,SAAQD,WAAU,IAHxB,2C,mFAMVU,KAAKR,c,+BASE,IAAD,EACwBQ,KAAKX,MAA3BC,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OACE,6BAASX,UAAU,aAClBU,EACD,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAkB,GAAK,OACjB,kBAAC,EAAD,CACEf,IAAKe,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GAlENwB,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.176ddef5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Movie.css';\r\n\r\n\r\nfunction Movie({id, year, title, summary,poster,genres}){\r\n    return <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"genres\">\r\n                     {genres.map((genre,index) => \r\n                    <li key={index} className=\"genres__genre\">{genre}</li> )}</ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n            </div>\r\n    </div>\r\n};\r\n/////\r\n// propTypes 라고 쓰길 권장 자주하는 실수\r\nMovie.propTypes = {\r\n id: PropTypes.number.isRequired,\r\n year: PropTypes.number.isRequired,\r\n title: PropTypes.string.isRequired,\r\n summary: PropTypes.string.isRequired,\r\n poster: PropTypes.string.isRequired,\r\n genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from './Movie';\r\nimport './App.css';\r\n// import PropTypes from \"prop-types\";\r\n\r\nclass App extends React.Component{\r\n  // state = {\r\n  //   count: 0\r\n  // };\r\n \r\n  // onAdd = () =>{\r\n  //   this.setState(current =>({count: current.count +1}));\r\n  // };\r\n  // onMinus = () => {\r\n  //   this.setState(current =>({count: current.count -1}));\r\n  // };\r\n  // componentDidMount(){\r\n  //   console.log(\"get ready?\");\r\n  // };\r\n  // componentDidUpdate(){\r\n  //   console.log(\"update!\");\r\n  // };\r\n  // componentWillUnmount(){\r\n  //   console.log(\"bye\");\r\n  // };\r\n  // render(){\r\n  //   console.log(\"gee\");\r\n  //   return <div>\r\n  //     {/* <h1>The number is {this.state.count}</h1>\r\n  //     <button onClick={this.onAdd}>Add</button>\r\n  //     <button onClick={this.onMinus}>Minus</button> */}\r\n  //   </div>\r\n  // }\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    console.log(movies);\r\n    this.setState({ movies, isLoading:false });\r\n  }\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  \r\n  \r\n  // 2가지 방법\r\n  // async componentDidMount(){\r\n  //   const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n  //   console.log(movies);\r\n  // };\r\n  render(){\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n      {isLoading ? (\r\n      <div className=\"loader\">\r\n        <span className=\"loader__text\">Loading...</span>\r\n        </div>\r\n      ) : (\r\n      <div className=\"movies\">\r\n        {movies.map(movie =>  (\r\n        <Movie\r\n          key={movie.id}\r\n          id={movie.id} \r\n          year={movie.year}\r\n          title={movie.title}\r\n          summary={movie.summary}\r\n          poster={movie.medium_cover_image}\r\n          genres={movie.genres}\r\n        />\r\n        ))}\r\n      </div>\r\n      )\r\n      }\r\n    </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}